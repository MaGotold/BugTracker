services:
  backend:
    container_name: backend_app
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports: 
      - "8080:8080"
    volumes:
      - .:/app/src  
    environment:
      - DB_USERNAME=${DB_USERNAME}  
      - DB_PASSWORD=${DB_PASSWORD}  
      - DB_URL=jdbc:postgresql://db:5432/bugtrackerlocal 
    depends_on:
      - db
      - redis
    networks: 
      - bugtracker-network
      

  db:
    container_name: server
    image: postgres:latest
    restart: always
    environment: 
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
     # - POSTGRES_DB=bugtrackerlocal
      - DB_URL=jdbc:postgresql://db:5432/bugtrackerlocal 
      - REDIS_URL=redis://redis:6379
    ports:
      - "5432:5432"
    networks: 
      - bugtracker-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN}
      - PGADMIN_DEFAULT_PASSWORD=${DB_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - bugtracker-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    environment:
      - REDIS_PASSWORD=${DB_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - bugtracker-network

networks:
  bugtracker-network:
    driver: bridge
    
volumes:
  pgdata:
    driver: local
  pgadmin_data:
    driver: local
 